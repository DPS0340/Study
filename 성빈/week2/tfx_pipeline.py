# -*- coding: utf-8 -*-
"""TFX_Pipeline.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H5HyQeo1Z2xkDYlQffmxoq5GlJtK68-F
"""

!pip install -U tfx

import os
import tempfile
import urllib
import tensorflow_data_validation as tfdv
import pandas as pd

_data_root = tempfile.mkdtemp(prefix='tfx-data')
DATA_PATH = 'https://raw.githubusercontent.com/tensorflow/tfx/master/tfx/examples/chicago_taxi_pipeline/data/simple/data.csv'
_data_filepath = os.path.join(_data_root, "data.csv")
urllib.request.urlretrieve(DATA_PATH, _data_filepath)

# 머신러닝 파이프라인에 통합하기
from tfx import v1 as tfx
from tfx.components import CsvExampleGen
from tfx.orchestration.experimental.interactive.interactive_context import InteractiveContext
from tfx.proto import example_gen_pb2

# 학습, 평가, 테스트 데이터셋을 각각 6:2:2의 비율로 분할 / 분할 비율은 hash_buckets이 담당 / 기본 분할은 2:1 (학습, 평가)
output = example_gen_pb2.Output(
    split_config=example_gen_pb2.SplitConfig(splits=[
                                                     example_gen_pb2.SplitConfig.Split(name='train', hash_buckets=6),
                                                     example_gen_pb2.SplitConfig.Split(name='eval', hash_buckets=2),
                                                     example_gen_pb2.SplitConfig.Split(name='test', hash_buckets=2),
    ])
)
context = InteractiveContext()

# 파이프라인 컴포넌트를 인스턴스화합니다.
example_gen = CsvExampleGen(input_base=_data_root, output_config=output)
# 대화식으로 컴포넌트를 실행합니다.
context.run(example_gen)

from tfx.components import StatisticsGen

statistics_gen = StatisticsGen(examples=example_gen.outputs['examples'])
context.run(statistics_gen)
context.show(statistics_gen.outputs['statistics'])

from tfx.components import SchemaGen

schema_gen = SchemaGen(statistics=statistics_gen.outputs['statistics'],
                       infer_feature_shape=True)
context.run(schema_gen)
context.show(schema_gen.outputs['schema'])

# ExampleVlidator
from tfx.components import ExampleValidator

example_validator = ExampleValidator(statistics=statistics_gen.outputs['statistics'],
                                     schema=schema_gen.outputs['schema'])

context.run(example_validator)

from tfx.components import Transform

transform = Transform(
    examples=example_gen.outputs['examples'],
    schema=schema_gen.outputs['schema'],
    module_file=os.path.abspath('preprocessing.py')
)

context.run(transform)

